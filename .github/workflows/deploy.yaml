name: Deploy Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        port: 22
        debug: true
        script_stop: true
        timeout: 15m          # was plain number; use duration and give headroom
        command_timeout: 10m  # per-command timeout; works when no PTY
        # request_pty: true   # ‚Üê removed so timeouts apply

        script: |
          set -euxo pipefail  # fail fast, show where it stops

          # Ensure sudo won't prompt (prevents hang)
          sudo -n true || { echo "sudo requires a password (configure NOPASSWD)"; exit 1; }

          # Clone if missing
          if [ ! -d "YoloServiceHadi" ]; then
            echo "Cloning repository..."
            git clone https://github.com/Hadi-Serhan/YoloServiceHadi.git
          fi

          cd YoloServiceHadi

          # Reset to latest main
          if [ -d ".git" ]; then
            echo "Resetting to origin/main..."
            git fetch origin
            git reset --hard origin/main
          fi

          # Ensure venv prerequisites (non-interactive apt with lock timeout)
          echo "Installing python3-venv if missing..."
          sudo DEBIAN_FRONTEND=noninteractive apt-get update -o DPkg::Lock::Timeout=60
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y -o DPkg::Lock::Timeout=60 python3-venv

          # (Re)create .venv if missing or broken
          if [ ! -f ".venv/bin/activate" ]; then
            echo "Creating virtual environment..."
            rm -rf .venv
            python3 -m venv .venv
          fi

          # Activate and install Python dependencies
          # shellcheck disable=SC1091
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r torch-requirements.txt
          pip install -r requirements.txt

          # Ensure system libraries are present (non-interactive)
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y -o DPkg::Lock::Timeout=60 ffmpeg libsm6 libxext6

          # Restart systemd service
          echo "Restarting the service..."
          sudo systemctl daemon-reload
          sudo systemctl restart yolo.service

          # Check service status
          if systemctl is-active --quiet yolo.service; then
            echo "Service restarted successfully."
          else
            echo "Service failed to start."
            sudo journalctl -u yolo.service -n 50 --no-pager
            exit 1
          fi
