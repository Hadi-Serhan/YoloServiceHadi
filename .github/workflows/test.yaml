name: Run Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: python -m pip install --upgrade pip pre-commit
      - run: pre-commit run --all-files

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: python -m pip install --upgrade pip pip-audit
      # Fast path: audit app deps only (skip torch to avoid huge downloads)
      - run: pip-audit --strict -r requirements.txt

  test:
    needs: [lint, audit]
    runs-on: ubuntu-latest
    name: Run tests with coverage
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r torch-requirements.txt
          pip install -r requirements.txt
      - name: Prepare upload directories
        run: |
          UPLOADS_DIR="${UPLOADS_BASE_DIR:-uploads}"
          mkdir -p "$UPLOADS_DIR/original" "$UPLOADS_DIR/predicted"
      - name: Run tests with coverage + Allure results
        env:
          # force sqlite in CI; avoids Postgres accidentally
          DATABASE_URL: sqlite:///./test.db
          PIXABAY_API_KEY: ${{ secrets.PIXABAY_API_KEY }}
        run: |
          pytest \
            --cov=app \
            --cov-report=term-missing \
            --cov-report=xml \
            --junitxml=junit.xml \
            --alluredir=allure-results
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Set up Node (for Allure CLI)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Allure CLI
        run: npm i -g allure-commandline@2.30.0 --no-progress
      - name: Generate Allure report
        run: allure generate allure-results -o allure-report --clean
      - name: Upload Allure HTML report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  deploy-pages:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
